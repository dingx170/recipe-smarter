{"version":3,"sources":["./src/app/components/mealplan/oldplan/recipelist/recipelist.component.ts","./src/app/components/mealplan/oldplan/recipelist/recipelist.component.html","./src/app/enums/cuisine.enum.ts","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/enums/feature.enum.ts","./src/app/enums/meal-type.enum.ts","./src/app/components/user-profiles/user-profiles.component.ts","./src/app/components/user-profiles/user-profiles.component.html","./src/app/services/share-data.service.ts","./src/environments/environment.ts","./src/app/components/myrecipe/newrecipe/newrecipe.component.ts","./src/app/components/myrecipe/newrecipe/newrecipe.component.html","./src/app/services/login.service.ts","./src/app/components/mealplan/newplan/newplan.component.ts","./src/app/components/mealplan/newplan/newplan.component.html","./src/app/enums/recipe-tag.enum.ts","./src/app/enums/food-allergy.enum.ts","./src/app/components/mealplan/oldplan/oldplan.component.ts","./src/app/components/mealplan/oldplan/oldplan.component.html","./src/app/services/mealplan.service.ts","./src/app/components/ads/ads.component.ts","./src/app/components/ads/ads.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/recipes/recipes.component.ts","./src/app/components/recipes/recipes.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/app.module.ts","./src/app/services/recipe.service.ts","./src/app/components/myrecipe/oldrecipe/oldrecipe.component.ts","./src/app/components/myrecipe/oldrecipe/oldrecipe.component.html","./src/app/components/mealplan/oldplan/shoppinglist/shoppinglist.component.ts","./src/app/components/mealplan/oldplan/shoppinglist/shoppinglist.component.html","./src/app/components/recipe-content/recipe-content.component.ts","./src/app/components/recipe-content/recipe-content.component.html","./src/app/services/auth.service.ts","./src/app/components/myrecipe/myrecipe.component.ts","./src/app/components/myrecipe/myrecipe.component.html","./src/app/components/mealplan/mealplan.component.ts","./src/app/components/mealplan/mealplan.component.html","./src/app/services/user.service.ts","./src/app/components/header-base/header-base.component.ts","./src/app/components/header-base/header-base.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MealplanService } from '../../../../services/mealplan.service';\nimport { IRecipe } from '../../../../interfaces/irecipe'\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-recipelist',\n  templateUrl: './recipelist.component.html',\n  styleUrls: ['./recipelist.component.css']\n})\nexport class RecipelistComponent implements OnInit {\n\n  public myrecipes: any[];\n\n  public mealplanId: string;\n\n  public userId: number;\n\n  constructor(public recipeService: MealplanService, \n              public route: ActivatedRoute,\n              public authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.authService.getSession().subscribe(\n      data =>{\n        this.userId = data.user_id;\n        console.log(\"Get response: \" + JSON.stringify(data));\n      }\n\n    );\n    this.mealplanId = this.route.snapshot.params['mealplanId'];\n    this.getRecipeList();\n\n  }\n\n  getRecipeList() {\n    var rxjsData = this.recipeService.getRecipeListByMealplanID(this.mealplanId, this.userId);\n    rxjsData.subscribe((data) => {\n      console.log(data);\n      this.myrecipes = <any[]>data;\n    })\n  }\n\n}\n","<br>\n<h1 class=\"subtitle-text\">My Recipe List</h1>\n\n<table class=\"tab table table-borderless\">\n    <thead>\n        <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Recipe</th>\n            <th scope=\"col\"></th>\n            <th scope=\"col\">Quantity</th>\n            <th scope=\"col\">Done</th>\n        </tr>\n    </thead>\n\n    <tbody *ngFor=\"let item of myrecipes; let key=index;\">\n        <tr>\n            <th scope=\"row\">{{ key + 1 }}</th>\n            <td>{{ item.recipe.name }}</td>\n            <td>\n                <a [routerLink]=\"['.', item.recipe.recipe_id]\">\n                    <img src=\"{{item.recipe.photo}}\" class=\"img-responsive recipe-pic\" alt=\"Image\">\n                </a>\n            </td>\n            <td>{{item.quantity}}</td>\n            <td>\n                <input type=\"checkbox\">\n            </td>\n        </tr>\n    </tbody>\n</table>","export enum Cuisine {\n    None = \"None\",\n    Chinese = \"Chinese\", \n    Mexican = \"Mexican\", \n    Italian = \"Italian\", \n    Japanese = \"Japanese\", \n    Greek = \"Greek\", \n    French = \"French\", \n    Thai = \"Thai\", \n    Spanish = \"Spanish\", \n    Indian = \"Indian\", \n    Mediterranean = \"Mediterranean\"\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { UserService} from '../../services/user.service'\nimport { ShareDataService} from '../../services/share-data.service'\nimport { IUser } from 'src/app/interfaces/IUser';\nimport { FoodAllergy } from 'src/app/enums/food-allergy.enum';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  @Input()\n  new_user: IUser = {\n    user_id: -1,\n    name: \"\",\n    password: \"\",\n    email: \"\",\n    ssoId: \"\",\n    restrictions: [FoodAllergy.None],\n\n  };;\n\n  validEmailandName: boolean = false;\n  signup_failure: boolean = false;\n\n  constructor(\n    private user_service: UserService,\n    private share_service: ShareDataService\n  ) { }\n\n  ngOnInit(): void {\n    this.validEmailandName = true;\n    this.signup_failure= false;\n  }\n\n  signUp(): void{\n    console.log(\"sign method called\")\n    this.user_service.validateNameEmail(this.new_user.email, this.new_user.name)\n    .subscribe(firstRes =>{\n      if(!firstRes){\n\n        this.user_service.addUser(this.new_user).subscribe(secondRes => {\n          if(secondRes.ret_code){\n            // jump to sign up successful component\n            this.share_service.setData(\"userid\", secondRes.userid);\n            this.share_service.setData(\"userObj\", secondRes.user_obj);\n          }\n          else{\n            // display error banner on top and prompt user try again\n            this.signup_failure = true;\n          }\n        })\n      }\n\n      else{\n        this.validEmailandName = false;\n      }\n\n    });\n\n  }\n\n}\n","<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n\n<div *ngIf=\"signup_failure\">\n  <div class = \"col-6\">\n    <div class=\"alert alert-danger\" role=\"alert\">\n      <h4 class=\"alert-heading\">We are sorry!</h4>\n      <p>Sign up process failed please try again.</p>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"!validEmailandName\">\n  <div class=\"alert alert-warning\" role=\"alert\">\n    <h4 class=\"alert-heading\">Oops! Email or Username has been occupied</h4>\n    <p>Please use another email</p>\n  </div>\n</div>\n\n\n<div class=\"signup-form\">\n    <form>\n\t\t<div class=\"text-center\">\n\t\t\t<h2>Sign Up</h2>\n\t\t\t<p>Please fill in this form to create an account!</p>\n\t\t\t<hr>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t<span class=\"input-group-addon\"><i class=\"fa fa-user\"></i></span>\n\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"username\" placeholder=\"Username\" required=\"required\" [(ngModel)]=\"new_user.name\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t<span class=\"input-group-addon\"><i class=\"fa fa-paper-plane\"></i></span>\n\t\t\t\t\t<input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Email Address\" required=\"required\" [(ngModel)]=\"new_user.email\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t<span class=\"input-group-addon\"><i class=\"fa fa-lock\"></i></span>\n\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"password\" placeholder=\"Password\" required=\"required\" [(ngModel)]=\"new_user.password\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t<span class=\"input-group-addon\">\n\t\t\t\t\t\t<i class=\"fa fa-lock\"></i>\n\t\t\t\t\t\t<i class=\"fa fa-check\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"confirm_password\" placeholder=\"Confirm Password\" required=\"required\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label class=\"checkbox-inline\"><input type=\"checkbox\" required=\"required\"> I accept the <a href=\"#\">Terms of Use</a> &amp; <a href=\"#\">Privacy Policy</a></label>\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<button type=\"submit\" class=\"btn btn-primary btn-lg\" (click)=\"signUp()\">Sign Up</button>\n\t\t\t</div>\n\t\t</div>\n    </form>\n\t<div class=\"text-center\">Already have an account?\n        <a [routerLink]=\"['../login']\">Login</a>\n    </div>\n</div>\n","export enum Feature {\n    None = \"None\",\n    MeatLover = \"MeatLover\", \n    Vegetarian = \"Vegetarian\", \n    LowCarb = \"LowCarb\", \n    Vegan = \"Vegan\"\n}\n","export enum MealType {\n    None =\"None\",\n    Breakfast = \"Breakfast\",\n    Lunch = \"Lunch\",\n    Dinner = \"Dinner\"\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FoodAllergy } from 'src/app/enums/food-allergy.enum';\nimport { IUser } from 'src/app/interfaces/IUser';\nimport { UserService} from '../../services/user.service'\nimport { ShareDataService} from '../../services/share-data.service'\n\n@Component({\n  selector: 'app-user-profiles',\n  templateUrl: './user-profiles.component.html',\n  styleUrls: ['./user-profiles.component.css']\n})\nexport class UserProfilesComponent implements OnInit {\n\n  @Input()\n  user: IUser = {\n    user_id: -1,\n    name: \"pikachu\",\n    password: \"pikachu\",\n    email: \"pikachu@gmail.com\",\n    ssoId: \"\",\n    restrictions: [FoodAllergy.None]\n  };\n\n  private userid: number;\n  public currUser: any;\n\n  logged_in: boolean;\n  updated_success: boolean = false;\n  update_fail: boolean = false;\n\n  allergy_list = Object.keys(FoodAllergy) as FoodAllergy[];\n\n  constructor(\n    private user_service: UserService,\n    private share_service: ShareDataService,\n\n  ){\n      this.userid = this.share_service.getData(\"userid\");\n      console.log(this.userid);\n      // this.currUser = this.share_service.getData(\"userObj\");\n      // console.log(\"user detail: \" + this.currUser);\n\n      if(this.userid){\n        this.user_service.getUserById(this.userid).subscribe(res=>{\n\n          console.log(\"res:\" + JSON.stringify(res.user_obj));\n          console.log(\"name: \" + res.user_obj.name);\n          if(res.ret_code){\n            this.user = res.user_obj;\n          }else{\n            console.log(\"error\");\n          }\n  \n        });\n      }\n      \n   }\n\n  ngOnInit(): void {\n\n    //every time initializing this component default logged in as false;\n    this.updated_success = false;\n    this.update_fail = false;\n\n    if(this.userid == null){\n      this.logged_in = false;\n    }else{\n      this.logged_in = true;\n    }\n  }\n  /**\n   * update user with the user object held within this component\n   */\n  update():void{\n    if(this.userid){\n      // response from the backend needs to be structured as loginRes\n      this.user_service.updateUser(this.user, this.userid)\n        .subscribe(res => {\n            if(res.ret_code == 0){\n              this.updated_success = true;\n            }\n            else if(res.ret_code == -1){\n              this.update_fail = true;\n            }\n\n        });\n    }\n\n  }\n\n}\n","<div *ngIf=\"!logged_in\">\n  <div class = \"col-6\">\n    <div class=\"alert alert-warning\" role=\"alert\">\n      Please log in to view and update your profile!\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"updated_success\">\n  <div class=\"alert alert-success\" role=\"alert\">\n    <h4 class=\"alert-heading\">Success!</h4>\n    <p>You have updated your profile..</p>\n  </div>\n</div>\n\n<div *ngIf=\"update_fail\">\n  <div class=\"alert alert-danger\" role=\"alert\">\n    <h4 class=\"alert-heading\">Failed!</h4>\n    <p>Update not done Please try click save button again.</p>\n  </div>\n</div>\n\n<div *ngIf=\"logged_in\">\n  <div class=\"row content-header\">\n    <div class=\"col-1\"></div>\n    <div class=\"col-11\">\n        <h1 class=\"bar-text\">My Profile</h1>\n    </div>\n  </div>\n\n  <div class=\"main-content\">\n\n    <br>\n      <div class=\"\">\n        <div class=\"row\">\n\n          <div class=\"col-1\"></div>\n          <div class=\"col-3\">\n            <div class=\"card card-profile shadow\">\n              <br><br><br>\n              <div class=\"row justify-content-center\">\n                <div class=\"col-lg-3 order-lg-2\">\n                  <div class=\"card-profile-image\">\n                      <img src=\"../../../assets/images/pikachu.png\" class=\"rounded-circle\">\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"card-body\">\n                <br>\n                <br>\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <div class=\"card-profile-stats d-flex justify-content-center mt-md-5\">\n                      <div>\n                        <span class=\"heading\">22</span>\n                        <span class=\"description\">Recipes</span>\n                      </div>\n                      <div>\n                        <span class=\"heading\">88</span>\n                        <span class=\"description\">Likes</span>\n                      </div>\n                      <div>\n                        <span class=\"heading\">8</span>\n                        <span class=\"description\">Points</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"text-center\">\n                  <h3>{{user.name}}</h3>\n                </div>\n                <br>\n                <div class=\"text-center\">\n                  <div class=\"h5 font-weight-300\">\n                    <a href=\"#\" class=\"btn btn-sm btn-info mr-4\">Popular</a>\n                    <a href=\"#\" class=\"btn btn-sm btn-primary mr-4\" >Recipe Master</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-6\">\n            <div class=\"card bg-secondary shadow\">\n              <div class=\"card-header bg-white border-0\">\n                <div class=\"row align-items-center\">\n                  <div class=\"col-8\">\n                    <h3 class=\"mb-0\">Basic Information</h3>\n                  </div>\n                </div>\n              </div>\n              <div class=\"card-body\">\n                <form>\n                  <div class=\"pl-lg-4\">\n                    <div class=\"row\">\n\n                      <div class=\"col-lg-6\">\n                        <div class=\"form-group focused\">\n                          <label class=\"form-control-label\" for=\"input-username\">Username</label>\n                          <input type=\"text\" id=\"input-username\" class=\"form-control\" [(ngModel)]=\"user.name\" name = \"username\" value={{user.name}}>\n                        </div>\n                      </div>\n\n                      <div class=\"col-lg-6\">\n                        <div class=\"form-group focused\">\n                          <label class=\"form-control-label\" for=\"input-password\">Password</label>\n                          <input type=\"text\" id=\"input-password\" class=\"form-control\" [(ngModel)]=\"user.password\" name = \"userpwd\"value = {{user.password}}>\n                        </div>\n                      </div>\n\n                      <div class=\"col-lg-6\">\n                        <div class=\"form-group focused\">\n                          <label class=\"form-control-label\" for=\"input-email\">Email</label>\n                          <input type=\"email\" class=\"form-control\" [(ngModel)]=\"user.email\" name = \"email\" value={{user.email}}>\n                        </div>\n                      </div>\n\n                    </div>\n                  </div>\n                  <label class=\"form-control-label\" for=\"allergies\">Allergy</label>\n                  <div class=\"col-lg-3\" *ngFor=\"let allergy of allergy_list\">\n                    <form>\n\n                        <input type = \"checkbox\" [checked] = \"user.restrictions.includes(allergy)\" ><span>{{allergy}}</span>\n                    </form>\n                  </div>\n\n\n                  <hr class=\"my-4\">\n                  <!-- Edit -->\n                  <div class=\"pl-lg-4\">\n                    <button class=\"btn edit-btn\">Save changes</button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-1\"></div>\n        </div>\n      </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * This is a util service to store the temporary data returned from the backend\n */\nexport class ShareDataService {\n\n  data:any={};\n\n  constructor() { }\n\n  setData(key: any,value: any) {\n    this.data[key]=value;\n }\n\n clearData() {\n    this.data={};\n }\n\n getData(key: any) {\n   return this.data[key];\n }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FoodAllergy } from '../../../enums/food-allergy.enum'\nimport { Cuisine } from '../../../enums/cuisine.enum'\nimport { Feature } from '../../../enums/feature.enum'\nimport { MealType } from '../../../enums/meal-type.enum'\nimport { RecipeTag } from '../../../enums/recipe-tag.enum'\nimport { IRecipe } from '../../../interfaces/irecipe'\nimport { RecipeService } from '../../../services/recipe.service';\n\n@Component({\n  selector: 'app-newrecipe',\n  templateUrl: './newrecipe.component.html',\n  styleUrls: ['./newrecipe.component.css']\n})\n\nexport class NewrecipeComponent implements OnInit {\n\n  public allergies = Object.keys(FoodAllergy);\n  public cuisineTypes = Object.keys(Cuisine);\n  public featureTypes = Object.keys(Feature);\n  public mealTypes = Object.keys(MealType);\n  public groupSizes = [1, 2, 3, 4, 5];\n  public budgets = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100];\n\n  public recipe: IRecipe = {\n    recipe_id: 0,\n    name: '', \n    member_id: 1, \n    date: new Date(),\n    steps: [{ step: '' }],\n    ingredients: [{ name: '', unit: '', count: 0 }],\n    group: 0,\n    cost: 0,\n    unit_cost: 0,\n    photo: '',\n    likes: 0,\n    meal_type: MealType.None,\n    cuisine_type: Cuisine.None,\n    feature_type: Feature.None,\n    restrictions: [FoodAllergy.None],\n    recipe_tags: [RecipeTag.None]\n  };\n\n  public imagePath: string =\"\";\n  public imgURL: any = \"\";\n  public isUpdate: boolean;\n\n  constructor(public recipeService: RecipeService, public route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.isUpdate = this.route.snapshot.data.isUpdate;\n\n    if (this.isUpdate) {\n      this.route.params.subscribe((value) => {\n        this.getRecipeContent(value.recipeId);\n      })\n    }\n  }\n\n  preview(files: any) {\n    if (files.length === 0)\n      return;\n \n    var reader = new FileReader();\n    this.imagePath = files;\n    reader.readAsDataURL(files[0]); \n    reader.onload = (_event) => { \n      this.imgURL = reader.result; \n    }\n  }\n\n  oneFileChanged(fileInput: any) {\n    if (fileInput.target.files && fileInput.target.files[0] && fileInput.target.files[0].size < 20971520) {\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n          const image = new Image();\n          image.src = e.target.result;\n          image.onload = rs => {\n\n          const imgBase64Path = e.target.result;\n          this.recipe.photo = imgBase64Path              \n          };\n      };\n\n      reader.readAsDataURL(fileInput.target.files[0]);\n    }\n\n  }\n\n  createRecipe(){\n    this.recipe.date = new Date();\n    this.recipe.unit_cost = Math.ceil(this.recipe.cost / this.recipe.group);\n\n    var rxjsData = this.recipeService.postNewRecipe(this.recipe);\n    rxjsData.subscribe((data) => {\n      console.log(data);\n      alert(\"Success!\");\n    }) \n  }\n\n  updateRecipe(){\n    this.recipe.date = new Date();\n    this.recipe.unit_cost = Math.ceil(this.recipe.cost / this.recipe.group);\n\n    var rxjsData = this.recipeService.updateOneRecipe(this.recipe);\n    rxjsData.subscribe((data) => {\n      console.log(data);\n      alert(\"Success!\");\n    }) \n  }\n\n  addStep() {\n    this.recipe.steps.push({ step: '' });\n  }\n  \n  removeStep(i: number) {\n    this.recipe.steps.splice(i, 1);\n  }\n\n  addItem() {\n    this.recipe.ingredients.push({ name: '', unit: '', count: 0 });\n  }\n  \n  removeItem(i: number) {\n    this.recipe.ingredients.splice(i, 1);\n  }\n\n  getRecipeContent(recipeId: string) {\n    var rxjsData = this.recipeService.getRecipeByID(recipeId);\n    rxjsData.subscribe((data) => {\n      this.recipe = <IRecipe>data;\n    })    \n  }\n}\n","<div class=\"row\">\n\n    <div class=\"col-1\"></div>\n\n    <div class=\"col-11\">\n\n        <br>\n        <h1 class=\"page-text\" *ngIf=\"!isUpdate\">Create new recipe</h1>\n        <h1 class=\"page-text\" *ngIf=\"isUpdate\">Update my recipe</h1>\n        <hr><br>\n\n        <form>\n\n            <div class=\"row\">\n                <div class=\"col-2\">\n                    <div class=\"form-group\">\n                        <label for=\"mealType\" class=\"filter-label\">Meal Type</label>\n                        <select name=\"mealType\" id=\"mealType\" [(ngModel)]=\"recipe.meal_type\" class=\"form-control\">\n                          <option value=\"{{mealType}}\" *ngFor=\"let mealType of mealTypes\">{{mealType}}</option>\n                        </select>\n                    </div>    \n                </div>   \n                <div class=\"col-2\">\n                    <div class=\"form-group\">\n                        <label for=\"cuisineType\" class=\"filter-label\">Cuisine Type</label>\n                        <select name=\"cuisineType\" id=\"cuisineType\" [(ngModel)]=\"recipe.cuisine_type\" class=\"form-control\" >\n                            <option value=\"{{cuisineType}}\" *ngFor=\"let cuisineType of cuisineTypes\">{{cuisineType}}</option>\n                        </select>\n                    </div>\n                </div>   \n                <div class=\"col-2\">\n                    <div class=\"form-group\">\n                        <label for=\"featureType\" class=\"filter-label\">Feature Type</label>\n                        <select name=\"featureType\" id=\"featureType\" [(ngModel)]=\"recipe.feature_type\" class=\"form-control\" >\n                            <option value=\"{{featureType}}\" *ngFor=\"let featureType of featureTypes\">{{featureType}}</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"col-2\">\n                    <div class=\"form-group\">\n                        <label for=\"budget\" class=\"filter-label\">Budget &lt; $</label>\n                        <select name=\"budget\" id=\"budget\" [(ngModel)]=\"recipe.cost\" class=\"form-control\" >\n                            <option value=\"{{budget}}\" *ngFor=\"let budget of budgets\">${{budget}}</option>\n                        </select>\n                    </div>\n                </div>   \n                <div class=\"col-2\">\n                    <div class=\"form-group\">\n                        <label for=\"groupSize\" class=\"filter-label\">Group size</label>\n                        <select name=\"groupSize\" id=\"groupSize\" [(ngModel)]=\"recipe.group\" class=\"form-control\" >\n                            <option value=\"{{groupSize}}\" *ngFor=\"let groupSize of groupSizes\">{{groupSize}}</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"col-2\">\n                    <div class=\"form-group\">\n                        <label for=\"allergies\" class=\"filter-label\">Allergies</label>\n                        <select name=\"allergies\" id=\"allergies\" [(ngModel)]=\"recipe.restrictions\" class=\"form-control\" multiple=\"multiple\">\n                          <option value=\"{{allergy}}\" *ngFor=\"let allergy of allergies\">{{allergy}}</option>\n                        </select>\n                    </div>    \n                </div>  \n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"subtitle-text\">Recipe Name</label>\n                <input type=\"text\" name=\"name\" id=\"name\" [(ngModel)]=\"recipe.name\" class=\"form-control\" required>\n            </div>\n  \n            <label for=\"steps\" class=\"subtitle-text\">Cooking Steps</label>\n            <section class=\"container\" *ngFor=\"let step of recipe.steps; let i = index;\">\n                <div class=\"row\">\n                    <div class=\"col-2\">\n                        <h4>Step {{i + 1}}</h4>\n                    </div>\n                    <div class=\"col\">\n                        <div class=\"form-group\">\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"step.step\" name=\"step_{{i + 1}}\"/>\n                        </div>\n                    </div>\n                    <div class=\"col-1\">\n                        <button type=\"button\" class=\"btn btn-danger\" (click)=\"removeStep(i)\">Remove</button>\n                    </div>\n                </div>\n            </section>\n            <button type=\"button\" class=\"btn btn-block\" (click)=\"addStep()\">Add step</button>\n  \n            <br>\n\n            <label for=\"ingredients\" class=\"subtitle-text\">Cooking Ingredients</label>\n            <section class=\"container\" *ngFor=\"let item of recipe.ingredients; let i = index;\">\n                <div class=\"row\">\n                    <div class=\"col-2\"></div>\n                    <div class=\"col\"><h5>Name</h5></div>\n                    <div class=\"col-2\"><h5>Quantity</h5></div>\n                    <div class=\"col-2\"><h5>Unit</h5></div>\n                    <div class=\"col-1\"></div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-2\">\n                        <h4>Item {{i + 1}}</h4>\n                    </div>\n                    <div class=\"col\">\n                        <div class=\"form-group\">\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"item.name\" name=\"name_{{i + 1}}\" />\n                        </div>\n                    </div>\n                    <div class=\"col-2\">\n                        <div class=\"form-group\">\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"item.count\" name=\"count_{{i + 1}}\" />\n                        </div>\n                    </div>\n                    <div class=\"col-2\">\n                        <div class=\"form-group\">\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"item.unit\" name=\"unit_{{i + 1}}\" />\n                        </div>\n                    </div>\n                    <div class=\"col-1\">\n                        <button type=\"button\" class=\"btn btn-danger\" (click)=\"removeItem(i)\">Remove</button>\n                    </div>\n                </div>\n            </section>\n            <button type=\"button\" class=\"btn btn-block\" (click)=\"addItem()\">Add ingredient</button>\n\n            <h1 class=\"subtitle-text\">Add image</h1>\n            <input #file type=\"file\" accept='image/*' (change)=\"preview(file.files); oneFileChanged($event)\" />\n            <br><br>\n            <div class=\"row pic-row\">\n                <div class=\"col\">\n                    <img [src]=\"imgURL\" class=\"pic-holder\" *ngIf=\"imgURL\">\n                </div>\n            </div>\n          \n            <br><hr>\n\n            <div class=\"row\">\n                <div class=\"col text-center\">\n                    <button type=\"submit\" *ngIf=\"!isUpdate\" class=\"btn btn-lg submit-btn submit-center\" (click)=\"createRecipe()\" title=\"submit new recipe\">Submit</button>\n                    <button type=\"submit\" *ngIf=\"isUpdate\" class=\"btn btn-lg submit-btn submit-center\" (click)=\"updateRecipe()\" title=\"submit new recipe\">Update</button>\n                </div>          \n            </div>\n\n          </form>\n\n          <hr>\n          <!-- <p>\n            Current info：{{recipe | json}}\n          </p> -->\n\n    </div>\n          \n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, Subject} from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { IAuth } from '../interfaces/auth';\nimport { NormalResponse } from '../interfaces/INormalResponse';\nimport { ShareDataService } from './share-data.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  // private base_api:string = \"http://localhost:8080/\";\n  private base_api:string = \"/\";\n\n  isLoggedIn: boolean;\n\n  loginStatusChange: Subject<boolean> = new Subject<boolean>();\n\n  private httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n\n  constructor(private http: HttpClient,\n              private shareDataService: ShareDataService) { \n                this.loginStatusChange.subscribe((value)=>{\n                  this.isLoggedIn = value;\n                });\n              }\n\n  /**\n   * Login service returns the user id as a temporarty token\n   * @param auth username password combination\n   *\n   */\n  login(auth: IAuth): Observable<NormalResponse>{\n    let url = this.base_api + \"api/login\";\n    return this.http.post<NormalResponse>(url, auth, this.httpOptions).pipe(\n      catchError(this.handleError<NormalResponse>('user login failed')\n    ));\n  }\n\n  logOut():void{\n    this.shareDataService.clearData();\n  }\n\n  changeLoginStatus(state: boolean){\n    this.loginStatusChange.next(state);\n  }\n\n  /**\n   * Handle the error and return a human readable message to delegating component\n   * Return an empty IUser object to keep the app running.\n   * @param operation\n   * @param result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      console.error(error); // log to console instead\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FoodAllergy } from '../../../enums/food-allergy.enum'\nimport { Cuisine } from '../../../enums/cuisine.enum'\nimport { Feature } from '../../../enums/feature.enum'\nimport { MealType } from '../../../enums/meal-type.enum'\nimport { IMealplan } from 'src/app/interfaces/imealplan';\nimport { IRecipe } from '../../../interfaces/irecipe'\nimport { MealplanService } from '../../../services/mealplan.service';\nimport { element } from 'protractor';\nimport { AuthService } from 'src/app/services/auth.service';\n@Component({\n  selector: 'app-newplan',\n  templateUrl: './newplan.component.html',\n  styleUrls: ['./newplan.component.css']\n})\nexport class NewplanComponent implements OnInit {\n\n  public allergies = Object.keys(FoodAllergy);\n  public cuisineTypes = Object.keys(Cuisine);\n  public featureTypes = Object.keys(Feature);\n  public mealTypes = Object.keys(MealType);\n  public groupSizes = [1, 2, 3, 4, 5];\n  public budgets = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100];\n\n  public mealplan: any = {\n    group: 0,\n    budget: 0,\n    date:0,\n    meal_type: MealType.None,\n    cuisine_type: Cuisine.None,\n    feature_type: Feature.None,\n    restrictions: [FoodAllergy.None],\n    recipe_list: []\n  }\n\n\n  public filter: any = {\n    group: 0,\n    budget: 0,\n    meal_type: MealType.None,\n    cuisine_type: Cuisine.None,\n    feature_type: Feature.None,\n    restrictions: [FoodAllergy.None]\n  }\n\n  // public recipequality: ;\n  public recipelist: any[] = []; \n  public gotrecipes: boolean;\n  public userId: number; // might be problematic\n\n  constructor(public mealplanService: MealplanService, \n              public route: ActivatedRoute,\n              public authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.gotrecipes = false;\n    // this.recipelist = [{ name: \"Hot Pepper and Onion Pizza\"},\n    //                     { name: \"Beef Gyros\"},]\n    this.authService.getSession().subscribe(\n      data =>{\n        this.userId = data.user_id;\n        console.log(\"Get response: \" + JSON.stringify(data));\n      }\n\n    );\n\n  }\n\n  getRecipesForCustomized(){\n    var rxjsData = this.mealplanService.getRecipesByFilter(this.filter, this.userId);\n    this.mealplan.recipe_list = [];\n    rxjsData.subscribe((data) => {\n      this.recipelist = <IRecipe[]>data;\n      this.gotrecipes = true;\n      this.recipelist.forEach(element => {\n        // delete element.photo;\n        this.mealplan.recipe_list.push({recipe: element, quantity:0});\n      });\n\n      console.log('meal plan: ', this.mealplan);\n    }) \n  }\n\n  createMealPlan(){\n    // this.mealplan.budget = this.filter.budget;\n    this.mealplan.group = this.filter.group;\n    // this.mealplan.meal_type = this.filter.meal_type;\n    // this.mealplan.cuisine_type = this.filter.cuisine_type;\n    // this.mealplan.feature_type = this.filter.feature_type;\n    this.gotrecipes = false;\n    this.mealplan.date = new Date();\n    this.mealplan.recipe_list.forEach((element:any) =>{\n      delete element.recipe.photo;\n    });\n    var rxjsData = this.mealplanService.postNewMealplan(this.mealplan, this.userId);\n    rxjsData.subscribe((data) => {\n      console.log(data);\n      alert(\"Success!\");\n    }) \n  }\n\n}\n","<div class=\"row\">\n\n    <div class=\"col-1\"></div>\n\n    <div class=\"col-11\">\n\n        <br>\n        <h1 class=\"page-text\">Tell us what you like :)</h1>\n        <hr>\n        <br>\n\n        <div class=\"row\">\n            <div class=\"col-2\">\n                <div class=\"form-group\">\n                    <label for=\"mealType\" class=\"filter-label\">Meal Type</label>\n                    <select name=\"mealType\" id=\"mealType\" [(ngModel)]=\"filter.meal_type\" class=\"form-control\">\n                      <option value=\"{{mealType}}\" *ngFor=\"let mealType of mealTypes\">{{mealType}}</option>\n                    </select>\n                </div>    \n            </div>   \n            <div class=\"col-2\">\n                <div class=\"form-group\">\n                    <label for=\"cuisineType\" class=\"filter-label\">Cuisine Type</label>\n                    <select name=\"cuisineType\" id=\"cuisineType\" [(ngModel)]=\"filter.cuisine_type\" class=\"form-control\" >\n                        <option value=\"{{cuisineType}}\" *ngFor=\"let cuisineType of cuisineTypes\">{{cuisineType}}</option>\n                    </select>\n                </div>\n            </div>   \n            <div class=\"col-2\">\n                <div class=\"form-group\">\n                    <label for=\"featureType\" class=\"filter-label\">Feature Type</label>\n                    <select name=\"featureType\" id=\"featureType\" [(ngModel)]=\"filter.feature_type\" class=\"form-control\" >\n                        <option value=\"{{featureType}}\" *ngFor=\"let featureType of featureTypes\">{{featureType}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"col-2\">\n                <div class=\"form-group\">\n                    <label for=\"budget\" class=\"filter-label\">Budget &lt; $</label>\n                    <select name=\"budget\" id=\"budget\" [(ngModel)]=\"filter.budget\" class=\"form-control\" >\n                        <option value=\"{{budget}}\" *ngFor=\"let budget of budgets\">${{budget}}</option>\n                    </select>\n                </div>\n            </div>   \n            <div class=\"col-2\">\n                <div class=\"form-group\">\n                    <label for=\"groupSize\" class=\"filter-label\">Group size</label>\n                    <select name=\"groupSize\" id=\"groupSize\" [(ngModel)]=\"filter.group\" class=\"form-control\" >\n                        <option value=\"{{groupSize}}\" *ngFor=\"let groupSize of groupSizes\">{{groupSize}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"col-2\">\n                <div class=\"form-group\">\n                    <label for=\"allergies\" class=\"filter-label\">Allergies</label>\n                    <select name=\"allergies\" id=\"allergies\" [(ngModel)]=\"filter.restrictions\" class=\"form-control\" multiple=\"multiple\">\n                      <option value=\"{{allergy}}\" *ngFor=\"let allergy of allergies\">{{allergy}}</option>\n                    </select>\n                </div>    \n            </div>  \n        </div>\n\n        <br>\n       \n        <br>\n        <div class=\"row\">\n            \n            <button type=\"submitbtn\" class=\"btn btn-block\" (click)=\"getRecipesForCustomized()\" title=\"get recommended recipes for planning\">Plan my meal</button>\n            \n            \n            \n        </div>\n        <br><br>\n        \n        <div *ngIf=\"gotrecipes\">\n            <hr>\n            <table class=\"tab table table-borderless\">\n                \n            \n                <tbody *ngFor=\"let item of mealplan.recipe_list; let key=index;\">\n                    <tr>\n                        <th scope=\"row\"><h4>{{ key + 1 }}</h4></th>\n                        <td><h4>{{ item.recipe.name }}</h4></td>\n                        <td>\n                            \n                            <img src=\"{{item.recipe.photo}}\" class=\"img-responsive recipe-pic\" alt=\"Image\">\n                          \n                        </td>\n                        <td><h4>{{item.recipe.cost}}</h4></td>\n                        <td>\n                            \n                            <button type=\"button\" class=\"btn-down sp-main count-btn\" (click)=\"item.quantity=item.quantity-1;mealplan.budget=mealplan.budget-item.recipe.cost\">-</button>\n                            <input  max=\"17\" min=\"1\" value=\"{{item.quantity}}\" [(ngModel)]=\"item.quantity\" type=\"text\" class=\"readonly-input\" readonly=\"\">\n                            <button type=\"button\" class=\"btn-up sp-main count-btn\" (click)=\"item.quantity=item.quantity+1;mealplan.budget=mealplan.budget+item.recipe.cost\">+</button>\n                            \n                        </td>\n                        \n                       \n                    </tr>\n                </tbody>\n            </table>\n\n            <div class = \"row-fluid text-right\">\n                <label for=\"name\" class=\"subtitle-text\">Mealplan Cost</label>\n            </div>\n            <div class = \"row-fluid text-right\">\n                <input type=\"text\" name=\"name\" id=\"name\" [(ngModel)]=\"mealplan.budget\" class=\"readonly-input\"readonly=\"\">\n            </div>\n            <hr>\n            <div class = \"row\">\n                <div class=\"col text-center\">\n                <button type=\"submit\" class=\"btn btn-lg submit-btn submit-center\" title=\"confirm recipes\" (click)=\"createMealPlan()\">Confirm</button>\n                </div>\n            </div>\n            <hr>\n        </div>\n\n        <br>\n       \n\n    </div>\n          \n</div>","export enum RecipeTag {\n    None = \"None\",\n    Popular = \"Popular\",\n    GoldenRecipe = \"GoldenRecipe\",\n    CostEffective = \"CostEffective\"\n}\n","export enum FoodAllergy {\n    None = \"None\",\n    Corn = \"Corn\", \n    Egg = \"Egg\", \n    Fish = \"Fish\", \n    Meat = \"Meat\", \n    Milk = \"Milk\", \n    Peanut = \"Peanut\", \n    Shellfish = \"Shellfish\", \n    Soy = \"Soy\", \n    TreeNut = \"TreeNut\", \n    Wheat = \"Wheat\", \n    FPIES = \"FPIES\"\n}\n","import { Component, OnInit } from '@angular/core';\nimport { IMealplan } from 'src/app/interfaces/imealplan';\nimport { AuthService } from 'src/app/services/auth.service';\n\nimport { MealplanService } from '../../../services/mealplan.service';\n\n@Component({\n  selector: 'app-oldplan',\n  templateUrl: './oldplan.component.html',\n  styleUrls: ['./oldplan.component.css']\n})\nexport class OldplanComponent implements OnInit {\n\n  public mealplans: IMealplan[] = [];\n  public userId: number;\n\n  \n  constructor(public mealplan:MealplanService, public authService: AuthService){}\n\n\n  ngOnInit(): void {\n    \n    this.authService.getSession().subscribe(\n      data =>{\n        this.userId = data.user_id;\n        console.log(\"Get response: \" + JSON.stringify(data));\n      }\n\n    );\n\n    console.log(\"this is my user id: \" + this.userId);\n\n    this.mealplan.getAllMealPlansForUser(this.userId)\n      .subscribe((result)=>{\n        console.log(result);\n        this.mealplans = <IMealplan[]>result;\n        console.log(this.mealplans);\n      })\n\n  }\n\n}\n","<br>\n    <table class=\"tab table table-borderless\">\n        <thead>\n            <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Creation Date/Time</th>\n                <th scope=\"col\">Budget</th>\n                <th scope=\"col\">Group</th>\n                <th scope=\"col\">Recipe List</th>\n                <th scope=\"col\">Shopping List</th>\n            </tr>\n        </thead>\n\n        <tbody *ngFor=\"let item of mealplans; let key=index;\">\n            <tr>\n                <th scope=\"row\">{{ key + 1 }}</th>\n                <td>{{ item.date | date:'medium'}}</td>\n                <td>{{ item.budget }}</td>\n                <td>{{ item.group }}</td>\n                <td>\n                    <button class=\"btn btn-lg submit-btn\">\n                        <a class=\"nav-link\" [routerLink]=\"['.', item.mealplan_id, 'recipelist']\">Check</a>\n                    </button>\n                </td>\n                <td>\n                    <button class=\"btn btn-lg submit-btn\">\n                        <a class=\"nav-link\" [routerLink]=\"['.', item.mealplan_id, 'shoppinglist']\">Check</a>\n                    </button>\n                </td>\n            </tr>\n        </tbody>\n\n    </table>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { IMealplan } from '../interfaces/imealplan';\nimport { IRecipe } from '../interfaces/irecipe';\nimport { FoodAllergy } from '../enums/food-allergy.enum'\nimport { ShareDataService } from './share-data.service';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MealplanService {\n  // hostUrl: string = 'http://localhost:8080/api/';\n  hostUrl: string = '/api/';\n  // userId: number;\n\n  constructor(public http:HttpClient){}\n        \n  getAllMealPlansForUser(userId: number){\n    // this.userId = this.shareDataService.getData('userid');\n    return new Observable((observer) => {\n      this.http.get<IMealplan[]>(this.hostUrl + 'mealplan/' + userId).subscribe((res:any) =>{\n      observer.next(res);\n      });\n\n    })\n\n  }\n  getRecipesByFilter(filter:any, userId: number){\n    //const httpOptions = {headers: new HttpHeaders({ 'Content-Type': 'application/json' })};\n    console.log(filter);\n    let params = new HttpParams();\n    params = params.append('budget',filter.budget);\n    params = params.append('group', filter.group);\n    params = params.append('meal_type', filter.meal_type);\n    params = params.append('cuisine_type', filter.cuisine_type);\n    params = params.append('feature_type', filter.feature_type);\n    filter.restrictions.forEach((element:any) => {\n        params = params.append(`restrictions[]`, element);\n    });\n    // this.userId = this.shareDataService.getData('userid');\n    return new Observable((observer) => {\n  \n      this.http.get<IRecipe[]>(this.hostUrl + 'mealplan/' + userId + '/customization/getrecipelist', {params:params}).subscribe((res:any) => {\n        observer.next(res);\n      });\n    })\n  }\n  postNewMealplan(mealplan:any, userId: number){\n    const httpOptions = {headers: new HttpHeaders({'content-Type': 'application/json' })};\n    console.log(mealplan);\n    // this.userId = this.shareDataService.getData('userid');\n    return new Observable((observer) => {\n      this.http.post(this.hostUrl + 'mealplan/' + userId + '/customization/', mealplan, httpOptions).subscribe((res) =>{\n        observer.next(res);\n      });\n    })\n  }\n\n  getRecipeListByMealplanID(mealplanId: string, userId: number) {\n    // this.userId = this.shareDataService.getData('userid');\n    return new Observable((observer) => {\n      this.http.get<IRecipe[]>(this.hostUrl + 'mealplan/' + userId + '/plans/' + mealplanId + '/recipelist').subscribe((res:any) => {\n        observer.next(res);\n      });\n    })\n  }\n\n  getShoppingListByMealplanID(mealplanId: string, userId: number) {\n    // this.userId = this.shareDataService.getData('userid');\n    return new Observable((observer) => {\n      this.http.get<any[]>(this.hostUrl + 'mealplan/' + userId + '/plans/' + mealplanId + '/shoppinglist').subscribe((res:any) => {\n        observer.next(res);\n      });\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ads',\n  templateUrl: './ads.component.html',\n  styleUrls: ['./ads.component.css']\n})\nexport class AdsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n    <br><br>\n    <div class=\"row\">\n        <img src=\"assets/images/ads_1.jpg\" class=\"img-responsive ad-pic\" alt=\"Image\">\n    </div>\n\n    <br><br>\n    <div class=\"row\">\n        <img src=\"assets/images/ads_3.jpg\" class=\"img-responsive ad-pic\" alt=\"Image\">\n    </div>\n\n    <br><br>\n    <div class=\"row\">\n        <img src=\"assets/images/ads_4.jpg\" class=\"img-responsive ad-pic\" alt=\"Image\">\n    </div>\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'recipe-smart-client';\n}\n","<app-header-base></app-header-base>\n\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { FoodAllergy } from '../../enums/food-allergy.enum'\nimport { Cuisine } from '../../enums/cuisine.enum'\nimport { Feature } from '../../enums/feature.enum'\nimport { MealType } from '../../enums/meal-type.enum'\nimport { RecipeService } from '../../services/recipe.service';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\nexport class RecipesComponent implements OnInit {\n\n  public allergies = Object.keys(FoodAllergy).filter(key => key != \"None\");\n  public cuisineTypes = Object.keys(Cuisine).filter(key => key != \"None\");\n  public featureTypes = Object.keys(Feature).filter(key => key != \"None\");\n  public mealTypes = Object.keys(MealType).filter(key => key != \"None\");\n  public groupSizes = [1, 2, 3, 4, 5];\n  public budgets = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100];\n\n  public filter: any = {\n    meal_types: [],\n    feature_types: [],\n    cuisine_types: [],\n    name: '',\n    cost: 100\n  };\n\n  public recipes: any;\n\n  constructor(public recipeService:RecipeService) { }\n\n  ngOnInit(): void {\n    \n    this.showAllRecipes();\n\n  }\n\n  showAllRecipes() {\n    \n    var rxjsData = this.recipeService.getAllRecipes();\n\n    rxjsData.subscribe((data) => {\n      this.recipes = data;\n    })    \n  }\n\n  filterRecipes(filter: any) {\n\n    this.filter.meal_types\n    \n    var rxjsData = this.recipeService.getRecipesByFilter(filter);\n\n    rxjsData.subscribe((data) => {\n      this.recipes = data;\n    })   \n  }\n\n}\n","<div class=\"row\">\n     <!-- Left side Ads -->\n     <div class=\"col-2 align-center\">\n        <app-ads></app-ads>\n    </div>\n\n    <div class=\"col-8\">\n\n        <br><br>\n\n         <!-- Filters -->\n        <div class=\"row\">\n\n            <div class=\"col\">\n                <div ngbDropdown class=\"d-inline-block\">\n                    <button class=\"btn filterbtn\" id=\"dropdownBasic1\" ngbDropdownToggle>Meal Type</button>\n                    <select ngbDropdownMenu name=\"mealType\" id=\"mealType\" [(ngModel)]=\"filter.meal_types\" class=\"form-control\" multiple=\"multiple\">\n                        <option value=\"{{mealType}}\" *ngFor=\"let mealType of mealTypes\">{{mealType}}</option>\n                    </select>\n                </div>\n            </div>\n            \n            <div class=\"col\">\n                <div ngbDropdown class=\"d-inline-block\">\n                    <button class=\"btn filterbtn\" id=\"dropdownBasic1\" ngbDropdownToggle>Cuisine</button>\n                    <select ngbDropdownMenu name=\"cuisineType\" id=\"cuisineType\" [(ngModel)]=\"filter.cuisine_types\" class=\"form-control\" multiple=\"multiple\">\n                        <option value=\"{{cuisineType}}\" *ngFor=\"let cuisineType of cuisineTypes\">{{cuisineType}}</option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"col\">\n                <div ngbDropdown class=\"d-inline-block\">\n                    <button class=\"btn filterbtn\" id=\"dropdownBasic1\" ngbDropdownToggle>Feature</button>\n                    <select ngbDropdownMenu name=\"featureType\" id=\"featureType\" [(ngModel)]=\"filter.feature_types\" class=\"form-control\" multiple=\"multiple\">\n                        <option value=\"{{featureType}}\" *ngFor=\"let featureType of featureTypes\">{{featureType}}</option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"col\">\n                <div ngbDropdown class=\"d-inline-block\">\n                    <button class=\"btn filterbtn\" id=\"dropdownBasic1\" ngbDropdownToggle>Budget &lt; $</button>\n                    <select ngbDropdownMenu name=\"budget\" id=\"budget\" [(ngModel)]=\"filter.cost\" class=\"form-control\">\n                        <option value=\"{{budget}}\" *ngFor=\"let budget of budgets\">{{budget}}</option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"col\">\n                <input type=\"text\" name=\"name\" id=\"name\" [(ngModel)]=\"filter.name\" class=\"filter-input form-control\" placeholder=\"Search by name\">\n            </div>\n\n            <div class=\"col\">\n                <button type=\"submit\" class=\"btn filterbtn\" (click)=\"filterRecipes(filter)\" title=\"filter recipes\">Show</button>\n            </div>\n\n        </div>\n\n        <br><hr><br>\n\n        <!-- Contents -->\n        <div class=\"container-fluid bg-3 text-center\">              \n            <div class=\"row picrow\">\n                <div class=\"col-4\" *ngFor=\"let item of recipes\">\n                    <a [routerLink]=\"['.', item.recipe_id]\">\n                        <img src=\"{{item.photo}}\" class=\"img-responsive recipe-pic\" alt=\"Image\">\n                    </a>\n                    <p class=\"recipe-name\">{{ item.name }}</p>\n                </div>\n            </div>           \n        </div>\n\n    </div>\n\n     <!-- Right side Ads -->\n     <div class=\"col-2 align-center\">\n        <app-ads></app-ads>\n    </div>\n</div>\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IAuth } from 'src/app/interfaces/auth';\nimport { SimpleResponse } from 'src/app/interfaces/ISimpleResponse';\nimport { LoginService } from '../../services/login.service'\nimport { ShareDataService } from '../../services/share-data.service'\nimport { HeaderBaseComponent } from '../header-base/header-base.component'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\n/**\n * This service send login request to backend and calls for storeage service\n * storage service is exposed for other component to use\n */\nexport class LoginComponent implements OnInit {\n\n  @Input()\n  auth: IAuth = {\n    name: \"test username\",\n    password: \"test password\"\n  };\n  isLoggedIn: boolean;\n\n  constructor(private login_service: LoginService,\n              private shared_service: ShareDataService) {\n                this.isLoggedIn = this.shared_service.getData('isLoggedIn');\n              }\n\n  ngOnInit(): void {\n  }\n\n  login():void{\n\n    //login needs to get a full user object back and store it in the local cache\n    this.login_service.login(this.auth).subscribe(\n      res => {\n\n        if(res.ret_code == 0){\n          this.shared_service.setData(\"userid\", res.userid);\n          this.shared_service.setData(\"isLoggedIn\", true);\n          \n          console.log(res.ret_msg);\n          this.isLoggedIn = true;\n          this.login_service.changeLoginStatus(true);\n          HeaderBaseComponent.setLoginStatus(true);\n          alert(\"Logged in Successfully\");\n\n        }\n        else{\n          alert(res.ret_msg);\n\n        }\n        \n      }\n\n    );\n  }\n\n  logOut():void{\n    this.login_service.logOut();\n    console.log(\"User logged out, states cleared\");\n    this.isLoggedIn = false;\n    HeaderBaseComponent.setLoginStatus(false);\n    alert(\"Logged out successfully.\")\n  }\n\n}\n","<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n\n<div *ngIf= \"isLoggedIn\" id=\"logout btn\" >\n    <div class=\"col-12\">\n        <div class=\"logout-form\">\n            <form>\n                <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-block\" (click)=\"logOut()\">Log out</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n<!-- *ngif = \"isLoggedIn == false\" -->\n<div *ngIf = \"!isLoggedIn\" id=\"log in form\">\n    <div class=\"login-form\">\n        <form>\n            <h2 class=\"text-center\">Log in</h2>\n            <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Username\" required=\"required\"\n                [(ngModel)]=\"auth.name\" name=\"username\">\n            </div>\n            <div class=\"form-group\">\n                <input type=\"password\" class=\"form-control\" placeholder=\"Password\" required=\"required\"\n                [(ngModel)]=\"auth.password\" name = \"password\">\n            </div>\n            <br>\n            <div class=\"form-group\">\n                <button type=\"submit\" class=\"btn btn-block\" (click)=\"login()\">Log in</button>\n                <a role=\"button\" class=\"btn btn-block\" href=\"/auth/google\">Log in Google</a>\n            </div>\n    \n        </form>\n    \n        <p class=\"text-center\"><a href=\"#\" [routerLink]=\"['../sign-up']\">Create an Account</a></p>\n    </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AdsComponent } from './components/ads/ads.component';\nimport { HeaderBaseComponent } from './components/header-base/header-base.component';\nimport { RecipesComponent } from './components/recipes/recipes.component';\nimport { MealplanComponent } from './components/mealplan/mealplan.component';\nimport { NewplanComponent } from './components/mealplan/newplan/newplan.component';\nimport { OldplanComponent } from './components/mealplan/oldplan/oldplan.component';\nimport { MyrecipeComponent } from './components/myrecipe/myrecipe.component';\nimport { OldrecipeComponent } from './components/myrecipe/oldrecipe/oldrecipe.component';\nimport { NewrecipeComponent } from './components/myrecipe/newrecipe/newrecipe.component';\nimport { UserProfilesComponent } from './components/user-profiles/user-profiles.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RecipeContentComponent } from './components/recipe-content/recipe-content.component';\nimport { ShoppinglistComponent } from './components/mealplan/oldplan/shoppinglist/shoppinglist.component';\nimport { RecipelistComponent } from './components/mealplan/oldplan/recipelist/recipelist.component';\n\n\nimport { LoginService } from './services/login.service';\nimport { MealplanService } from './services/mealplan.service';\nimport { RecipeService } from './services/recipe.service';\nimport { ShareDataService } from './services/share-data.service';\nimport { UserService } from './services/user.service';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RecipesComponent,\n    AdsComponent,\n    HeaderBaseComponent,\n    MealplanComponent,\n    NewplanComponent,\n    OldplanComponent,\n    MyrecipeComponent,\n    OldrecipeComponent,\n    NewrecipeComponent,\n    UserProfilesComponent,\n    SignupComponent,\n    LoginComponent,\n    RecipeContentComponent,\n    ShoppinglistComponent,\n    RecipelistComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    CommonModule\n  ],\n  providers: [\n    LoginService,\n    MealplanService,\n    RecipeService,\n    ShareDataService,\n    UserService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { IRecipe } from '../interfaces/irecipe';\nimport { ShareDataService } from './share-data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipeService {\n\n  // hostUrl: string = 'http://localhost:8080/api/';\n  hostUrl: string = '/api/';\n  userId: number;\n  \n  constructor(public http: HttpClient, public shareDataService: ShareDataService) { }\n\n  getAllRecipes() {\n    return new Observable((observer) => {\n      this.http.get<IRecipe[]>(this.hostUrl + 'recipes').subscribe((res:any) => {\n        observer.next(res);\n      });\n    })\n  }\n\n  getRecipeByID(recipeId: string) {\n    return new Observable((observer) => {\n      this.http.get<IRecipe>(this.hostUrl + 'recipes/' + recipeId).subscribe((res:any) => {\n        observer.next(res);\n      });\n    })\n  }\n\n  getRecipesByMemberID() {\n    this.userId = this.shareDataService.getData('userid');\n\n    return new Observable((observer) => {\n      this.http.get<IRecipe[]>(this.hostUrl + 'myrecipes/' + this.userId).subscribe((res:any) => {\n        observer.next(res);\n      });\n    })\n  }\n\n  getRecipesByFilter(filter: any) {\n    return new Observable((observer) => {\n      this.http.get<IRecipe[]>(this.hostUrl + 'recipes', {params: filter}).subscribe((res:any) => {\n        observer.next(res);\n      });\n    })\n  }\n\n  postNewRecipe(recipe: any) {\n    const httpOptions = {headers: new HttpHeaders({ 'Content-Type': 'application/json' })};\n\n    return new Observable((observer) => {\n      this.userId = this.shareDataService.getData('userid');\n      recipe.member_id = this.userId;\n      this.http.post(this.hostUrl + 'myrecipes/' + this.userId, recipe, httpOptions).subscribe((res) => {\n        observer.next(res);\n      });\n    })\n  }\n\n  updateOneRecipe(recipe: any) {\n    const httpOptions = {headers: new HttpHeaders({ 'Content-Type': 'application/json' })};\n\n    return new Observable((observer) => {\n      this.userId = this.shareDataService.getData('userid');\n      this.http.put(this.hostUrl + 'myrecipes/' + this.userId + '/' + recipe.recipe_id, recipe, httpOptions).subscribe((res) => {\n        observer.next(res);\n      });\n    })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RecipeService } from '../../../services/recipe.service'\n\n@Component({\n  selector: 'app-oldrecipe',\n  templateUrl: './oldrecipe.component.html',\n  styleUrls: ['./oldrecipe.component.css']\n})\nexport class OldrecipeComponent implements OnInit {\n\n  public myrecipes: any;\n  public hostUrl: string;\n\n  constructor(public recipeService: RecipeService) { }\n\n  ngOnInit(): void {\n    this.hostUrl = this.recipeService.hostUrl;\n    this.getMyRecipes();\n  }\n\n  getMyRecipes() {\n  \n    var rxjsData = this.recipeService.getRecipesByMemberID();\n\n    rxjsData.subscribe((data) => {\n      this.myrecipes = data;\n    })    \n  }\n\n}\n","<br><br>\n<div class=\"row\">\n    <div class=\"col-1\"></div>\n\n    <!-- Contents -->\n    <div class=\"container-fluid bg-3 text-center\">              \n        <div class=\"row picrow\">\n            <div class=\"col-4\" *ngFor=\"let item of myrecipes\">\n                <a [routerLink]=\"['.', item.recipe_id]\">\n                    <img src=\"{{item.photo}}\" class=\"img-responsive recipe-pic\" alt=\"Image\">\n                </a>\n                <p class=\"recipe-name\">{{ item.name }}</p>\n            </div>\n        </div>           \n    </div>\n\n    <div class=\"col-2\"></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MealplanService } from '../../../../services/mealplan.service';\nimport { IIngredientList } from '../../../../interfaces/iingredientlist'\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-shoppinglist',\n  templateUrl: './shoppinglist.component.html',\n  styleUrls: ['./shoppinglist.component.css']\n})\nexport class ShoppinglistComponent implements OnInit {\n\n  public ingredient_list: IIngredientList[];\n\n  public mealplanId: string;\n\n  public userId: number;\n\n  constructor(public recipeService: MealplanService, \n              public route: ActivatedRoute,\n              public authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.authService.getSession().subscribe(\n      data =>{\n        this.userId = data.user_id;\n        console.log(\"Get response: \" + JSON.stringify(data));\n      }\n\n    );\n\n    this.mealplanId = this.route.snapshot.params['mealplanId'];\n    this.getShoppingList();\n  }\n\n  getShoppingList() {\n    var rxjsData = this.recipeService.getShoppingListByMealplanID(this.mealplanId, this.userId);\n    rxjsData.subscribe((data: any) => {\n      this.ingredient_list = <IIngredientList[]>(data.shopping_list);\n    })\n  }\n\n}\n","<br>\n<h1 class=\"subtitle-text\">My Shopping List</h1>\n\n<table class=\"tab table table-borderless\">\n    <thead>\n        <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Ingredient</th>\n            <th scope=\"col\">Number</th>\n            <th scope=\"col\">Unit</th>\n            <th scope=\"col\">Done</th>\n        </tr>\n    </thead>\n\n    <tbody *ngFor=\"let item of ingredient_list; let key=index;\">\n        <tr>\n            <th scope=\"row\">{{ key + 1 }}</th>\n            <td>{{ item.name }}</td>\n            <td>{{ item.count }}</td>\n            <td>{{ item.unit }}</td>\n            <td>\n                <input type=\"checkbox\">\n            </td>\n        </tr>\n    </tbody>\n\n</table>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RecipeService } from '../../services/recipe.service';\n\n@Component({\n  selector: 'app-recipe-content',\n  templateUrl: './recipe-content.component.html',\n  styleUrls: ['./recipe-content.component.css']\n})\nexport class RecipeContentComponent implements OnInit {\n\n  public recipe: any = {\n    name: \"\",\n    image: \"\",\n    likes: 0,\n    group: 0\n  }\n\n  public isMember: boolean;\n  public hasAds: boolean;\n\n  constructor(public route: ActivatedRoute, public recipeService: RecipeService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((value) => {\n      this.getRecipeContent(value.recipeId);\n    })\n\n    this.isMember = this.route.snapshot.data.isMember;\n    this.hasAds = this.route.snapshot.data.hasAds;\n  }\n\n  getRecipeContent(recipeId: string) {\n    var rxjsData = this.recipeService.getRecipeByID(recipeId);\n    rxjsData.subscribe((data) => {\n      this.recipe = data;\n    })    \n  }\n\n}\n","<div class=\"row\">\n\n    <div class=\"col-2\" *ngIf=\"hasAds\">\n        <app-ads></app-ads>\n    </div>\n\n    <div class=\"col\">\n\n        <br>\n        <h1 class=\"page-text\">{{recipe.name}}</h1>\n\n        <br>\n\n        <div class=\"row\">\n            <div class=\"col-5\">\n                <div class=\"text-center\">\n                    <img src=\"{{recipe.photo}}\">\n                </div>\n            </div>\n            <div class=\"col\"></div>\n            <div class=\"col-6\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <label class=\"filter-label\" *ngIf=\"recipe.meal_type && recipe.meal_type !== 'None'\">{{recipe.meal_type}}</label>\n                    </div>\n                    <div class=\"col\">\n                        <label class=\"filter-label\" *ngIf=\"recipe.cuisine_type && recipe.cuisine_type !== 'None'\">{{recipe.cuisine_type}}</label>\n                    </div>\n                    <div class=\"col\">\n                        <label class=\"filter-label\" *ngIf=\"recipe.feature_type && recipe.feature_type !== 'None'\">{{recipe.feature_type}}</label>\n                    </div>\n                </div>\n                <br>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <label class=\"value-label\">Serves group {{recipe.group}}</label>\n                    </div>\n                    <div class=\"col\">\n                        <label class=\"value-label\">Budget &lt; ${{recipe.cost}}</label>\n                    </div>\n                    <div class=\"col\">\n                        <label class=\"value-label\" *ngIf=\"recipe.recipe_tags && recipe.recipe_tags[0] !== 'None'\">Recipe tag {{recipe.recipe_tags[0]}}</label>\n                    </div>\n                </div>\n                <br>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <label class=\"alert-label text-left warning\" *ngIf=\"recipe.restrictions\">Contains: {{recipe.restrictions}}</label>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <hr>\n\n        <div class=\"row\">\n            <div class=\"col-9\">\n                <h1 class=\"subtitle-text\">Cooking steps</h1>\n                <hr>\n                <table class=\"tab table table-borderless\">\n                    <tbody *ngFor=\"let item of recipe.steps; let key=index;\">\n                        <tr>\n                            <th scope=\"row\">step {{ key + 1 }}</th>\n                            <td>{{ item.step }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n\n            </div>\n            <hr>\n            <div class=\"col-9\">\n                <hr>\n                <h1 class=\"subtitle-text\">Ingredients</h1>\n                <hr>\n                <table class=\"tab table table-borderless\">\n                    <tbody *ngFor=\"let item of recipe.ingredients; let key=index;\">\n                        <tr>\n                            <th scope=\"row\">{{ key + 1 }}</th>\n                            <td>{{ item.name }}</td>\n                            <td>{{ item.count }}</td>\n                            <td>{{ item.unit }}</td>\n                        </tr>\n                    </tbody>\n        \n                </table>\n\n            </div>\n\n        </div>\n\n        <hr><br>\n\n        <button type=\"button\" class=\"btn btn-block\" *ngIf=\"isMember\" [routerLink]=\"['./edit']\">Edit Recipe</button>\n\n    </div>\n\n    <div class=\"col-2\" *ngIf=\"hasAds\">\n        <app-ads></app-ads>\n    </div>\n          \n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IUser } from '../interfaces/IUser'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  // private base_url:string = \"http://localhost:8080/auth/user\";\n\n  private base_url:string = \"/auth/user\";\n\n  constructor(private http: HttpClient) {\n  }\n\n  getSession(): Observable<IUser> {\n    return this.http.get<IUser>(this.base_url);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-myrecipe',\n  templateUrl: './myrecipe.component.html',\n  styleUrls: ['./myrecipe.component.css']\n})\nexport class MyrecipeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row content-header\">\n    <div class=\"col-1\"></div>\n    <div class=\"col-11\">\n        <h1 class=\"bar-text\">My Recipe</h1> \n    </div>\n     \n</div>\n\n<div class=\"row\">\n\n    <div class=\"col-2 left\">\n        <br>\n        <ul class=\"nav flex-column\">\n            <button class=\"nav-item left-btn\">\n            <a class=\"nav-link active\" [routerLink]=\"['./newrecipe']\">New recipe</a>\n            </button>\n            <button class=\"nav-item left-btn\">\n            <a class=\"nav-link\" [routerLink]=\"['./recipes']\">History</a>\n            </button>\n        </ul>\n    </div>\n\n    <div class=\"col-8\">\n        <router-outlet></router-outlet>\n    </div>\n    \n    <div class=\"col-2 right\">\n        <app-ads></app-ads>\n    </div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mealplan',\n  templateUrl: './mealplan.component.html',\n  styleUrls: ['./mealplan.component.css']\n})\nexport class MealplanComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row content-header\">\n    <div class=\"col-1\"></div>\n    <div class=\"col-11\">\n        <h1 class=\"bar-text\">Meal Planner</h1> \n    </div>\n     \n</div>\n\n<div class=\"row\">\n\n    <div class=\"col-2 left\">\n        <br>\n        <ul class=\"nav flex-column\">\n            <button class=\"nav-item left-btn\">\n            <a class=\"nav-link active\" [routerLink]=\"['./newplan']\">New plan</a>\n            </button>\n            <button class=\"nav-item left-btn\">\n            <a class=\"nav-link\" [routerLink]=\"['./history']\">History</a>\n            </button>\n        </ul>\n    </div>\n\n    <div class=\"col-8\">\n        <router-outlet></router-outlet>\n    </div>\n    \n    <div class=\"col-2 right\">\n        <app-ads></app-ads>\n    </div>\n\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of} from 'rxjs';\nimport { IUser } from '../interfaces/IUser'\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { ShareDataService} from '../services/share-data.service'\nimport { SimpleResponse} from '../interfaces/ISimpleResponse'\nimport { NormalResponse } from '../interfaces/INormalResponse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  //private base_api:string = \"http://localhost:8080\"\n  private base_api:string = \"/\"\n  private httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n\n  constructor(private http:HttpClient, private shared_service: ShareDataService) {}\n\n  /**\n   * Take the id from the delegating component\n   * create a http get request with the id as param\n   * send it to the backend and wait for the response in a async way\n   * @param id\n   */\n  getUserById(id: number): Observable<NormalResponse>{\n    const url = `${this.base_api}/user/${id}`;\n    return this.http.get<NormalResponse>(url).pipe(\n      catchError(this.handleError<NormalResponse>(`getUserById id = ${id}`))\n    );\n  }\n\n  /**\n   * Update User by given id\n   * @param user\n   * @param id\n   */\n  updateUser(user: IUser, id: number): Observable<SimpleResponse>{\n    let url:string = `${this.base_api}/user/${id}`;\n    return this.http.put<SimpleResponse>(url, user, this.httpOptions).pipe(\n      catchError(this.handleError<SimpleResponse>('updated user'))\n    );\n  }\n\n  /**\n   * Add user with the given User object from the delegating component\n   * @param user\n   */\n  addUser(user: IUser): Observable<NormalResponse>{\n\n    let url: string = this.base_api + \"/user\";\n    return this.http.post<NormalResponse>(url, user, this.httpOptions).pipe(\n      catchError(this.handleError<NormalResponse>('add user operation failed'))\n    );\n  }\n\n  /**\n   * Validate if given email already occupied in database\n   * @param email\n   */\n  validateNameEmail(email: string, name: string): Observable<boolean>{\n    // let url:string = `${this.base_api}/validation/?name=${name}&?email=${email}`;\n    let url: string = this.base_api + \"/validation/?name=\" + name + \"&?email=\" + email;\n    return this.http.get<boolean>(url).pipe(\n      catchError(this.handleError<boolean>(`check username and email username = ${name} email = ${email}`))\n    );\n  }\n\n\n  /**\n   * Handle the error and return a human readable message to delegating component\n   * Return an empty IUser object to keep the app running.\n   * @param operation\n   * @param result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      console.error(error); // log to console instead\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-header-base',\n  templateUrl: './header-base.component.html',\n  styleUrls: ['./header-base.component.css']\n})\nexport class HeaderBaseComponent implements OnInit {\n\n  public isLoggedIn: boolean = false;\n  //test :boolean = false;\n\n\n\n\n  constructor(private loginService: LoginService) { \n    this.loginService.loginStatusChange.subscribe(value=>{\n      this.isLoggedIn = value;\n    });\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  static setLoginStatus(loginStatus: boolean) {\n    //this.isLoggedIn = loginStatus;\n  }\n\n\n}\n","<div class=\"row header-container\">\n\n    <div class=\"col-2 align-center\">\n        <div ngbDropdown *ngIf=\"isLoggedIn\">\n            <i class=\"btn btn-outline-primary\" id=\"nav-icon\" ngbDropdownToggle></i>\n            <div ngbDropdownMenu aria-labelledby=\"navigation\" class=\"option-container\">\n                <button ngbDropdownItem class=\"option-font\" [routerLink]=\"['./recipes']\">Home Page</button>\n                <div class=\"dropdown-divider option-divider\"></div>\n                <button ngbDropdownItem class=\"option-font\" [routerLink]=\"['./myprofile']\">My Profile</button>\n                <div class=\"dropdown-divider option-divider\"></div>\n                <button ngbDropdownItem class=\"option-font\" [routerLink]=\"['./myrecipe']\">My Recipe</button>\n                <div class=\"dropdown-divider option-divider\"></div>\n                <button ngbDropdownItem class=\"option-font\" [routerLink]=\"['./mealplan']\">Meal Planner</button>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-1 align-center\"></div>\n\n    <div class=\"col-4 align-center\">\n        <h1 class=\"header-title\">Recipe Smart</h1>\n    </div>\n\n    <div class=\"col-2 align-center\">\n        <img class=\"logo\" src=\"assets/images/logo.PNG\">\n    </div>\n\n    <div class=\"col-1 align-center\"></div>\n\n    <div class=\"col-2 align-center\">\n        <button class=\"btn login-btn\" *ngIf=\"!isLoggedIn\">\n            <a class=\"nav-link active\" [routerLink]=\"['./login']\">Login</a>\n        </button>\n        <button class=\"btn login-btn\" *ngIf=\"isLoggedIn\">\n            <a class=\"nav-link active\" [routerLink]=\"['./login']\">Log out</a>\n        </button>\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RecipesComponent } from './components/recipes/recipes.component'\nimport { RecipeContentComponent } from './components/recipe-content/recipe-content.component'\n\nimport { MealplanComponent } from './components/mealplan/mealplan.component'\nimport { NewplanComponent } from './components/mealplan/newplan/newplan.component'\nimport { OldplanComponent } from './components/mealplan/oldplan/oldplan.component'\nimport { RecipelistComponent } from './components/mealplan/oldplan/recipelist/recipelist.component'\nimport { ShoppinglistComponent } from './components/mealplan/oldplan/shoppinglist/shoppinglist.component'\n\nimport { UserProfilesComponent } from './components/user-profiles/user-profiles.component'\nimport { SignupComponent } from './components/signup/signup.component'\nimport { LoginComponent } from './components/login/login.component'\n\nimport { MyrecipeComponent } from './components/myrecipe/myrecipe.component'\nimport { NewrecipeComponent } from './components/myrecipe/newrecipe/newrecipe.component'\nimport { OldrecipeComponent } from './components/myrecipe/oldrecipe/oldrecipe.component'\n\n\nconst routes: Routes = [\n  {path: 'recipes', component: RecipesComponent},\n  {path: 'recipes/:recipeId', component: RecipeContentComponent, data: {isMember: false, hasAds: true}},\n  {path: 'myprofile', component: UserProfilesComponent},\n  {path: 'sign-up', component:SignupComponent},\n  {path: 'login', component:LoginComponent},\n  {\n    path: 'mealplan', component: MealplanComponent,\n    children: [\n      {path: 'newplan', component: NewplanComponent},\n      {path: 'history', component: OldplanComponent},\n      {path: 'history/:mealplanId/shoppinglist', component: ShoppinglistComponent},\n      {path: 'history/:mealplanId/recipelist', component: RecipelistComponent},\n      {path: 'history/:mealplanId/recipelist/:recipeId', component: RecipeContentComponent, data: {isMember: false, hasAds: false}},\n      {path: '**', redirectTo: 'newplan'}\n    ]  \n  },\n  {\n    path: 'myrecipe', component: MyrecipeComponent,\n    children: [\n      {path: 'newrecipe', component: NewrecipeComponent, data: {isUpdate: false}},\n      {path: 'recipes', component: OldrecipeComponent},\n      {path: 'recipes/:recipeId', component: RecipeContentComponent, data: {isMember: true, hasAds: false}},\n      {path: 'recipes/:recipeId/edit', component: NewrecipeComponent, data: {isUpdate: true}},\n      {path: '**', redirectTo: 'recipes'}\n    ]  \n  },\n  {\n    path: '',\n    redirectTo: '/recipes',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}